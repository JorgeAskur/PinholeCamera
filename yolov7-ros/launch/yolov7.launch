<launch>
    <node pkg="yolov7_ros" type="detect_ros.py" name="detect" output="screen"
    ns="yolov7">
        <!-- Download the official weights from the original repo -->
        <param name="weights_path" type="str"
        value="$(find yolov7_ros)/weights/yolov7.pt"/>
        <!-- Path to a class_labels.txt file containing your desired class labels. The i-th entry corresponds to the i-th class id. For example, in coco class label 0 corresponds to 'person'. Files for the coco and berkeley deep drive datasets are provided in the 'class_labels/' directory. If you leave it empty then no class labels are visualized.-->
        <param name="classes_path" type="str" value="$(find yolov7_ros)/weights/coco.txt" />
        <!-- topic name to subscribe to -->
        <param name="img_topic" type="str" value="/zed2i/zed_node/left_raw/image_raw_color" />
        <!-- topic name for the detection output -->
        <param name="out_topic" type="str" value="yolov7" />
        <!-- confidence threshold -->
        <param name="conf_thresh" type="double" value="0.80" />
        <!-- intersection over union threshold -->
        <param name="iou_thresh" type="double" value="0.35" />
        <!-- queue size for publishing -->
        <param name="queue_size" type="int" value="1" />
        <!-- image size to which to resize each input image before feeding into the
        network (the final output is rescaled to the original image size) -->
        <param name="img_size" type="int" value="640" />
        <!-- flag whether to also publish image with the visualized detections -->
        <param name="visualize" type="bool" value="true" />
        <!-- 'cuda' or 'cpu' -->
        <param name="device" type="str" value="cuda" />
    </node>
    
    <node name="poseEstimation" pkg="vision" type="poseEstimationMode.py" output="screen" respawn="true"/>

</launch>
